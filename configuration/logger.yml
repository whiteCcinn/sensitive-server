refresh_rate: 30 seconds
appenders:
  root:
    kind: rolling_file
    path: "log/server.log"
    encoder:
      kind: pattern
      pattern: "「{T}:{I}」 {d(%Y-%m-%d %H:%M:%S)}[{h({l})}]{{{t}:{L}}}: {m}{n}"
    policy:
      kind: compound
      trigger: # 当文件超过10mb 时触发 rotate
        kind: size
        limit: 10mb
      roller: # rotate 类型
        kind: fixed_window # 直接原有文件 或者用 fixed_window
        pattern: 'log/server.log.{}'
        base: 0
        count: 5
  web:
    kind: rolling_file
    path: "log/web/web.log"
    encoder:
      kind: pattern
      pattern: "「{T}:{I}」 {d(%Y-%m-%d %H:%M:%S)}[{h({l})}]{{{t}:{L}}}: {m}{n}"
    policy:
      kind: compound
      trigger: # 当文件超过10mb 时触发 rotate
        kind: size
        limit: 3mb
      roller: # rotate 类型
        kind: fixed_window # 直接原有文件 或者用 fixed_window
        pattern: 'log/web/web.log.{}'
        base: 0
        count: 5
loggers:
  sensitive_server_web: # logger 名称必须与模块名相同, 如 app::request::db, 第一个应该为 crate 名称
    level: debug
    appenders:
      - root
      - web
    additive: false
root:
  level: info
  appenders:
    - root